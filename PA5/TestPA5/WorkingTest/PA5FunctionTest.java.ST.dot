digraph ASTGraph {
graph [rankdir="LR"];
node [shape=record];
0 [ label=" <f0> Scope | <f1> mDict\[CustomType\] | <f2> mDict\[PA5FunctionTest\] | <f3> mDict\[TestClassCompare\] | <f4> mDict\[TestThis\] "];
1[ label="  <f0> ClassSTE| <f1> mName = CustomType| <f2> mMain = false| <f3> mSuperClass = null| <f4> mScope "];
0:<f1> -> 1:<f0>
5 [ label=" <f0> Scope | <f1> mDict\[a\] "];
1:<f4> -> 5:<f0>
6 [ label="  <f0> VarSTE | <f1> mName = a| <f2> mType = INT| <f3> mBase = Z| <f4> mOffset = 0"];
5:<f1> -> 6:<f0>
2[ label="  <f0> ClassSTE| <f1> mName = PA5FunctionTest| <f2> mMain = true| <f3> mSuperClass = null| <f4> mScope "];
0:<f2> -> 2:<f0>
7 [ label=" <f0> Scope "];
2:<f4> -> 7:<f0>
3[ label="  <f0> ClassSTE| <f1> mName = TestClassCompare| <f2> mMain = false| <f3> mSuperClass = null| <f4> mScope "];
0:<f3> -> 3:<f0>
8 [ label=" <f0> Scope | <f1> mDict\[compare\] "];
3:<f4> -> 8:<f0>
9 [ label="  <f0> MethodSTE | <f1> mName = compare| <f2> mSignatrue = () returns VOID| <f3> mScope"];
8:<f1> -> 9:<f0>
10 [ label=" <f0> Scope | <f1> mDict\[a\] | <f2> mDict\[b\] | <f3> mDict\[this\] "];
9:<f3> -> 10:<f0>
11 [ label="  <f0> VarSTE | <f1> mName = a| <f2> mType = CustomType| <f3> mBase = Y| <f4> mOffset = 3"];
10:<f1> -> 11:<f0>
12 [ label="  <f0> VarSTE | <f1> mName = b| <f2> mType = CustomType| <f3> mBase = Y| <f4> mOffset = 5"];
10:<f2> -> 12:<f0>
13 [ label="  <f0> VarSTE | <f1> mName = this| <f2> mType = TestClassCompare| <f3> mBase = Y| <f4> mOffset = 1"];
10:<f3> -> 13:<f0>
4[ label="  <f0> ClassSTE| <f1> mName = TestThis| <f2> mMain = false| <f3> mSuperClass = null| <f4> mScope "];
0:<f4> -> 4:<f0>
14 [ label=" <f0> Scope | <f1> mDict\[a\] | <f2> mDict\[b\] | <f3> mDict\[func\] | <f4> mDict\[test\] | <f5> mDict\[getA\] | <f6> mDict\[getB\] "];
4:<f4> -> 14:<f0>
15 [ label="  <f0> VarSTE | <f1> mName = a| <f2> mType = INT| <f3> mBase = Z| <f4> mOffset = 0"];
14:<f1> -> 15:<f0>
16 [ label="  <f0> VarSTE | <f1> mName = b| <f2> mType = INT| <f3> mBase = Z| <f4> mOffset = 2"];
14:<f2> -> 16:<f0>
17 [ label="  <f0> MethodSTE | <f1> mName = func| <f2> mSignatrue = () returns VOID| <f3> mScope"];
14:<f3> -> 17:<f0>
21 [ label=" <f0> Scope | <f1> mDict\[this\] "];
17:<f3> -> 21:<f0>
22 [ label="  <f0> VarSTE | <f1> mName = this| <f2> mType = TestThis| <f3> mBase = Y| <f4> mOffset = 1"];
21:<f1> -> 22:<f0>
18 [ label="  <f0> MethodSTE | <f1> mName = test| <f2> mSignatrue = (TestThis) returns VOID| <f3> mScope"];
14:<f4> -> 18:<f0>
23 [ label=" <f0> Scope | <f1> mDict\[t\] | <f2> mDict\[this\] "];
18:<f3> -> 23:<f0>
24 [ label="  <f0> VarSTE | <f1> mName = t| <f2> mType = TestThis| <f3> mBase = Y| <f4> mOffset = 3"];
23:<f1> -> 24:<f0>
25 [ label="  <f0> VarSTE | <f1> mName = this| <f2> mType = TestThis| <f3> mBase = Y| <f4> mOffset = 1"];
23:<f2> -> 25:<f0>
19 [ label="  <f0> MethodSTE | <f1> mName = getA| <f2> mSignatrue = () returns INT| <f3> mScope"];
14:<f5> -> 19:<f0>
26 [ label=" <f0> Scope | <f1> mDict\[this\] "];
19:<f3> -> 26:<f0>
27 [ label="  <f0> VarSTE | <f1> mName = this| <f2> mType = TestThis| <f3> mBase = Y| <f4> mOffset = 1"];
26:<f1> -> 27:<f0>
20 [ label="  <f0> MethodSTE | <f1> mName = getB| <f2> mSignatrue = () returns INT| <f3> mScope"];
14:<f6> -> 20:<f0>
28 [ label=" <f0> Scope | <f1> mDict\[this\] "];
20:<f3> -> 28:<f0>
29 [ label="  <f0> VarSTE | <f1> mName = this| <f2> mType = TestThis| <f3> mBase = Y| <f4> mOffset = 1"];
28:<f1> -> 29:<f0>
}
